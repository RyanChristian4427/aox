Message fixes:

  1. Extra \r\n in the bodypart for o/1


LIST/LSUB fixes.

  There's lots of horrible breakage here (for example, the reference
  name is apparently just ignored).


Schema documentation

  I've done all I want to sql-schema.html and postgres.schema; I'll have
  to wait for Sujai's diagram to complete schema.html, but until then, I
  have done all I can to it.


Field name synchronisation

  If we ever need to add values to HeaderField::Type, new values must go
  AFTER ::Other, because we can't insert entries into the middle of the
  field_names table. So the type translation has to be done if the type
  is greater than or equal to Other.

  And we need to synchronise the in-memory maps via ocd anyway.


FETCH fixes:

  Currently we're always peeking; "fetch 1 body[1]" does not change
  the seen flag.


EXPUNGE fixes:

  Crab says: We need to do what RFC2180 says.

  Arnt says: RFC 2180 gives four possible approaches for FETCH and as
  many for STORE. IMO, as of this change our handling of STORE and
  FETCH is as good as any of those four. Less advanced, but a lot
  simpler.

  Hm. There is a bit of a race condition, e.g. if store and expunge
  are sent at the same time, or very nearly so. One of them will be
  processed first. If that's expunge, store will fail with a "no -
  database error". I suppose that's okay. It only happens if the store
  is processed before we spread the word about the expunged message.


Bodypart sharing

  We're doing an in-memory Dict< hash > right now.
  We could do better, but it might involve waiting.

  And, after some thought, I've decided that it doesn't belong in 0.90
  now. A great pity, but there it is.


Use SHA-1 to hash bodyparts instead of MD5.

  MD5 is broken, and we should be moving away from it.
  AMS needs to take code from RFC 3174 and make core/sha1.cpp.


inject a large number of messages, collect query statistics


test with more imap clients (corp/docs/misc/mua-list)

  Why do we have one list in mua-list and another in imap.html?


tlsproxy doesn't handle eof (or errors) well


move tests to another program


resource limits on memory allocation


make sure ocd works


the gui should do something


configuration overhaul


archives.oryx.com


top-level message/rfc822 support


Non-default IMAPS Listener support (mike@waspfactory.org)


rfc2047 encoding


tls client support (smtp, postgresql)


What to do about EventHandlers whose targets have died?


garbage collection (~/imapd.valgrind)


logging cleanups

  Mostly done now. I need to do another quick sweep to ensure that the
  various Logs are created in the right context. Furthermore, the Loop
  should not be calling commit() for every Connection; and they should
  each set their Log/Arena correctly in their Scope.


Miscellaneous cleanups:

  * get rid of Blah::setup wherever possible
  * member-ify some of the static functions in message
  * get rid of some friends


Inbox lifetime/mailbox reuse

  A newly created used needs an inbox. Since the user name may be the
  same as a former user, the mailbox may exist already, and may
  contain messages belonging to the former user.

  This behaviour has the benefit that "ms create user" is a perfect
  undelete for "ms delete user", but if the new user has no relation
  to the previous homonymous user, our behaviour is less desirable.

  I assume ms create user needs a command-line argument and msconsole
  needs to prompt its user.


Per-MTA installation and use

  We need http://www.oryx.com/mailstore/exim.html and friends, plus a
  section in src/doc/mailstore.man.

  MTAs worth documenting in this way: Postfix, sendmail, exim,
  qmail/netqmail. More?

  Notify mike@waspfactory.org


Signal handling

  What is the appropriate way to handle unknown signals?  (Or
  generally, any unpredictable occurence in untested circumstances.)
  Arnt sez: Follow the system default.

  SIGHUP is known: Users use it to mean "reopen the logfile" or
  "reread the config".

  Other known signals?


Reopen logfile when logd receives SIGHUP

  Preliminary course of action: Run chrooted to the directory where
  the logfile is, and reopen the logfile when SIGHUPPED. Document the
  need for JAILUSER to have write rights to that file.

  Possibly have logd listen to a unix-domain socket by default.

  Notify hs@schlittermann.de


Add support for "ms restart now" and "ms restart gracefully"

  Complications include: Some daemon must run as root, outside the
  jail. ocd perhaps? For cluster use, things grow complicated very
  quickly.

  Preliminary approach: Have ocd run chrooted in BINDIR instead of
  JAILDIR, and by default listen only to a unix socket.


Fix shutdown

  There's no practical way to shutdown using ocd/ocadmin. Perhaps this
  is another aspect of the problem above.


Web site proofreading

  Need a comprehensive proofreading session.


We should log a useful error if we want to open anything after chroot().


Write to the alistapart chap who wrote about @media after 0.91.
