Injector fixes:

  1. We need to share entries for identical bodyparts.
  2. Must fix the header_fields->part_numbers FK reference.
  3. Better error handling is urgently required.


FETCH fixes:

  Currently we're always peeking; "fetch 1 body[1]" does not change
  the seen flag.


EXPUNGE fixes:

  1. Must know about shared bodyparts.
  2. Can we use on delete cascade?
  3. Other brokenness.


Schema documentation

  I've done all I want to sql-schema.html and postgres.schema; I'll have
  to wait for Sujai's diagram to complete schema.html, but until then, I
  have done all I can to it.


Field name synchronisation

  If we ever need to add values to HeaderField::Type, new values must go
  AFTER ::Other, because we can't insert entries into the middle of the
  field_names table. So the type translation has to be done if the type
  is greater than or equal to Other.

  And we need to synchronise the in-memory maps via ocd anyway.


Fix shutdown

  there's no practical way to shutdown using ocd/ocadmin.


inject a large number of messages, collect query statistics


test with more imap clients (corp/docs/misc/mua-list)


tlsproxy doesn't handle eof (or errors) well


move tests to another program


resource limits on memory allocation


make sure ocd works


the gui should do something


configuration overhaul


archives.oryx.com


top-level message/rfc822 support


rfc2047 encoding


tls client support (smtp, postgresql)


What to do about EventHandlers whose targets have died?


garbage collection (~/imapd.valgrind)


logging cleanups

  Mostly done now. I need to do another quick sweep to ensure that the
  various Logs are created in the right context. Furthermore, the Loop
  should not be calling commit() for every Connection; and they should
  each set their Log/Arena correctly in their Scope.


Miscellaneous cleanups:

  * get rid of Blah::setup wherever possible
  * member-ify some of the static functions in message
  * get rid of some friends


Inbox lifetime/mailbox reuse

  A newly created used needs an inbox. Since the user name may be the
  same as a former user, the mailbox may exist already, and may
  contain messages belonging to the former user.

  This behaviour has the benefit that "ms create user" is a perfect
  undelete for "ms delete user", but if the new user has no relation
  to the previous homonymous user, our behaviour is less desirable.

  I assume ms create user needs a command-line argument and msconsole
  needs to prompt its user.
