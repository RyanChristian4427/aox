Add support for RFC 2047 encoding


Investigate the segfaults in "ms create user" on Debian.


Fix the extra \r\n in the bodypart for o/1


Make sure ocd announces new users and new mail


Fix the horrible LIST/LSUB problems:

  There's lots of horrible breakage here (for example, the reference
  name is apparently just ignored).


Signal handling

  What is the appropriate way to handle unknown signals?  (Or
  generally, any unpredictable occurence in untested circumstances.)
  Arnt sez: Follow the system default.

  SIGHUP is known: Users use it to mean "reopen the logfile" or
  "reread the config".

  Other known signals?


Schema documentation

  I've done all I want to sql-schema.html and postgres.schema; I'll have
  to wait for Sujai's diagram to complete schema.html, but until then, I
  have done all I can to it.


Set up and play with Tsearch2


Per-MTA installation and use

  We need http://www.oryx.com/mailstore/exim.html and friends, plus a
  section in src/doc/mailstore.man.

  MTAs worth documenting in this way: Postfix, sendmail, exim,
  qmail/netqmail. More?

  Notify mike@waspfactory.org


tlsproxy doesn't handle eof (or errors) well


Write to the alistapart chap who wrote about @media after 0.91.


I want a "uint characters[256]" with a pre-computed property bitmask for
easier parsing. It's well worth it now (cf. tspecials vs. especials).


Resource limits on memory allocation


tls client support (smtp, postgresql)


Web site proofreading

  Need a comprehensive proofreading session.


test with more imap clients (corp/docs/misc/mua-list)

  Why do we have one list in mua-list and another in imap.html?


move tests to another program


the gui should do something


configuration overhaul


archives.oryx.com


top-level message/rfc822 support


Consider RFC2231, §6:

  «IMAP4 [RFC-2060] servers SHOULD decode parameter value continuations
  when generating the BODY and BODYSTRUCTURE fetch attributes.»


FETCH fixes:

  Currently we're always peeking; "fetch 1 body[1]" does not change
  the seen flag.


EXPUNGE fixes:

  Crab says: We need to do what RFC2180 says.

  Arnt says: RFC 2180 gives four possible approaches for FETCH and as
  many for STORE. IMO, as of this change our handling of STORE and
  FETCH is as good as any of those four. Less advanced, but a lot
  simpler.

  Hm. There is a bit of a race condition, e.g. if store and expunge
  are sent at the same time, or very nearly so. One of them will be
  processed first. If that's expunge, store will fail with a "no -
  database error". I suppose that's okay. It only happens if the store
  is processed before we spread the word about the expunged message.


Use SHA-1 to hash bodyparts instead of MD5.

  MD5 is broken, and we should be moving away from it.
  AMS needs to take code from RFC 3174 and make core/sha1.cpp.


Bodypart sharing

  We're doing an in-memory Dict< hash > right now. We can do better.

  The distinction between bodyparts and binary_parts needs to go away.
  The documentation says so, the schema diagram says so, and AndrewSN
  and Dennis both say so too.

  Then we have to send this to the server:

    insert into bodyparts
      select $1 where not exists
        (select id from bodyparts where hash=$2)
    select id from bodyparts where hash=$2

  And then fetch the resulting id back. That's it.


inject a large number of messages, collect query statistics


What to do about EventHandlers whose targets have died?

  This will almost Just Work once we're in a GC world.


garbage collection (~/imapd.valgrind)


logging cleanups

  Mostly done now. I need to do another quick sweep to ensure that the
  various Logs are created in the right context. Furthermore, the Loop
  should not be calling commit() for every Connection; and they should
  each set their Log/Arena correctly in their Scope.


Miscellaneous cleanups:

  * get rid of Blah::setup wherever possible
  * avoid unnecessary header file inclusion


Inbox lifetime/mailbox reuse

  A newly created used needs an inbox. Since the user name may be the
  same as a former user, the mailbox may exist already, and may
  contain messages belonging to the former user.

  This behaviour has the benefit that "ms create user" is a perfect
  undelete for "ms delete user", but if the new user has no relation
  to the previous homonymous user, our behaviour is less desirable.

  I assume ms create user needs a command-line argument and msconsole
  needs to prompt its user.


Fix shutdown

  There's no practical way to shutdown using ocd/ocadmin. Perhaps this
  is another aspect of the problem above.


Add support for "ms restart now" and "ms restart gracefully"

  Complications include: Some daemon must run as root, outside the
  jail. ocd perhaps? For cluster use, things grow complicated very
  quickly.

  Preliminary approach: Have ocd run chrooted in BINDIR instead of
  JAILDIR, and by default listen only to a unix socket.


Field name synchronisation

  If we ever need to add values to HeaderField::Type, new values must go
  AFTER ::Other, because we can't insert entries into the middle of the
  field_names table. So the type translation has to be done if the type
  is greater than or equal to Other.

  And we need to synchronise the in-memory maps via ocd anyway.


Udoc nested classes

  Udoc should support a single level of nested classes. Several levels
  aren't necessary.

  Unsure what file names to use for output.


Udoc enums

  Not supported now. That needs fixing eventually.


Udoc web pages chores

  Add "Related Pages" etc. Clarify where background.html
  fits. usage.html is an orphan now; should it become a manpage?


Web page appearance/voice

  Right now, our pages look much the same, but differ in detail. It'd
  be good to have a formally decided look and feel, and update the
  pages to use that, and only that. For example, what's the "related
  pages" headline called, "pages" or "links", and is the second word
  capitalized?


HTML tidy fixes: suppress empty <p>, duplicate anchor names.


SASL NTLM authentication

  It may be odd and undocumented, and it may not be as strong as
  DIGEST-MD5, but it's implemented in Certain Clients ;)

  http://www.innovation.ch/java/ntlm.html seems to be a reasonable
  description. Cyrus also implements it.


Keeping stderr open

  Maybe we should keep it open forever. Maybe that should be a
  command-line option - but what should the default be?


Logging to syslog

  logfile=syslog:local2 could mean "log to syslog with the local2
  facility". that's ugly syntax. parsing and blah.

  if we implement this, the logd HUP handler can switch to syslog if
  it can't reopen the logfile.


Don't depend on md5sum

  Right now our installer expects md5sum to be present. However, only
  linux comes with md5sum universally.

  That's a rather bad reason to be linux-only.


We need a SIEVE interpreter.


Autoresponder

  We'll need one, nicely programmable, connected to our sieve.

  I was reminded of this by Google's wording:

  Thank you for writing to Google. This automated response is just to
  let you know that we've received your email, and you'll hear from us
  soon.

  Thank you for using Google.

  Regards,
  The Google Team


Search folders

  This gets more tricky each time I think about it. In particular, if
  the search encompasses dynamic message attributes, then assigning
  UIDs reliably requires us to store the UIDs in the database.


ANNOTATE support

  Annotations are good. We want them. They're easy for us. By now the
  draft should be stable, so we can implement whenever we want to and
  have the time.


ANNOTATEMORE

  Ditto. Separate point so that we can do one without the other.


Message arrival tag

  Once annotate is done, we want a tag, ie. a magic annotation which
  stays glued to the message wherever it goes, even after copy/move.

  We also want a way to store the original RFC822 format somewhere
  inside and/or outside the database, indexed by the arrival tag
  identifier. It's good if the tag is split, so we can have "x-y"
  where X is the CD/DVD number and Y is the file on the CD/DVD. Or
  something like that.


Clean up SubDir/SubInclude

  Rename them as Modules. Module X, Use X. Tie library use and headers
  to modules, so users get just the -I and -l arguments needed from
  the modules used (even if the entire tree is being compiled).

  Also give Program a third argument, so it takes the result name, the
  file sets to compile, and (new ->) the file containing main()


Web Style Guide

  Must add a section about the phrasing, what sort of language we
  used. Added by request of the CTO.


Retention Policy Framework

  A lot of sites will want explicit policies regarding what mail may
  not be deleted, what may be deleted, and what must be deleted. We
  can support that well.


