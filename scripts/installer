#!/bin/sh
#
# This script uses the Jamsettings to set up a database and write a stub
# configuration file for Mailstore to use. (We assume that we're running
# as root.)

if [ `id -u` != 0 ]; then
    echo Please run the install script as root.
    exit 1
fi

# Pull in the compile-time configuration
. $LIBDIR/.config.sh

CONFIG=$CONFIGDIR/mailstore.conf

# If we're upgrading from an older version, we probably don't want to
# overwrite anything. That mailstore.conf may contain a custom
# db-user, etc.
if [ -f $CONFIG ]; then
    echo $CONFIG already exists -- exiting without changes.
    echo " - not creating PostgreSQL user" $DBUSER
    echo " - not creating PostgreSQL database" $DBNAME
    echo " - not creating stub configuration file" $CONFIG
    exit 0
fi

# Find psql and pg_ctl
if [ "$PGBIN" = "" ]; then
    PSQL=psql
    PGCTL=pg_ctl
else
    PSQL=$PGBIN/psql
    PGCTL=$PGBIN/pg_ctl
fi

## Set up the database.
#
# Do we need to create the oryx user?

EXISTS="select usename from pg_catalog.pg_user where usename = '$DBUSER'"
EXISTS=$(su - $PGUSER -c "$PSQL -d template1 -Atqc \"$EXISTS\"")
if [ ! $EXISTS ]; then
    echo "Creating PostgreSQL user" $DBNAME
    if [ ! $DBPASS ]; then
        DBPASS=$(dd if=/dev/urandom bs=1 count=8 2>/dev/null|md5sum|cut -b-32)
    fi
    CREATE="create user $DBUSER with encrypted password '$DBPASS'"
    su - $PGUSER -c "$PSQL -d template1 -qc \"$CREATE\"" || exit
fi


# Do we need to create the mailstore database?
#
# Unfortunate problem: if the database exists, but is not owned by the
# user we either found or created above... but in that case, what can
# we do anyway?

EXISTS="select datname from pg_catalog.pg_database where datname = '$DBNAME'"
EXISTS=$(su - $PGUSER -c "$PSQL -d template1 -Atqc \"$EXISTS\"")
if [ ! $EXISTS ]; then
    echo "Creating PostgreSQL database" $DBNAME
    CREATE="create database $DBNAME with owner $DBUSER encoding 'UNICODE'"
    su - $PGUSER -c "$PSQL -d template1 -qc \"$CREATE\"" || exit
fi


# Feed the schema to the database if necessary.

EXISTS="select relname from pg_catalog.pg_class where relname='mailstore'"
EXISTS=$(su - $PGUSER -c "$PSQL -d $DBNAME -Atqc \"$EXISTS\"")
if [ ! $EXISTS ]; then
    echo "Loading Mailstore schema"
cat <<PSQL | su - $PGUSER -c "$PSQL -q -d $DBNAME -f -" || exit
\set ON_ERROR_STOP
SET SESSION AUTHORIZATION $DBUSER;
SET client_min_messages TO 'ERROR';
\i $LIBDIR/schema.pg
\i $LIBDIR/field-names
PSQL
fi


# Write a stub configuration file.

touch $CONFIG
chmod 0600 $CONFIG
cat <<CONFIG > $CONFIG
# Mailstore configuration. For more about this, see the mailstore.conf
# man page.

# Security Note: Anyone who can see the password in this file can do
# anything to your mail database, even delete all the mail.

# Specify the hostname if mailstore gets it wrong. We suggest not
# using the name "localhost".
# hostname = fully.qualified.hostname

# This database was initialized during Mailstore $VERSION installation.
# Date: `date`

db-address  = $DBADDRESS
db-name     = $DBNAME
db-user     = $DBUSER
db-password = ${DBPASS:-'""'}
CONFIG
