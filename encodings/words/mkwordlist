#!/usr/bin/perl -w

die "must have one argument (path to *.words)" unless ($#ARGV == 0);
chdir( $ARGV[0] );

# a function to reencode a file and stick anything unique into the array
sub encode {
    my $in = $_[0];
    my $cs = $_[1];
    open ( I, "recode utf-8...$cs < $in |" ) || die "ugga";
    foreach ( <I> ) {
	chomp;
	if ( /^[a-z\200-\377]+$/ && /[\200-\377]/ ) {
	    if ( defined( $forms{$_} ) ) {
		$forms{$_} = "inconclusive";
	    } else {
		$forms{$_} = $cs;
		$source{$_} = $in;
	    }
	}
    }
}

# call encode once for each interesting combination of words and encodings
encode( "german.words", "iso-8859-15" );
encode( "german.words", "macroman" );

encode( "french.words", "iso-8859-15" );
encode( "french.words", "macroman" );

encode( "dutch.words", "iso-8859-15" );
encode( "dutch.words", "macroman" );

encode( "czech.words", "iso-8859-2" );

#
# NOTE: the file names above must match those in jamfile
#

# print the encoded forms we saw only once
$numForms = 0;
foreach ( sort keys %forms ) {
    $numForms++ if ( $forms{$_} ne "inconclusive" );
}

$enum{"macroman"} = "MacRoman";
$enum{"iso-8859-2"} = "Iso88592";
$enum{"iso-8859-15"} = "Iso885915";

print "enum Encoding { Iso88592, Iso885915, MacRoman, NumEncodings };\n",
"static const uint NumForms = ", $numForms, ";\n",
"static const struct {\n",
"    const char * encodedForm;\n",
"    Encoding encoding;\n",
"} forms[", $numForms, "] = {\n";

foreach ( sort keys %forms ) {
    print "    { \"$_\", $enum{$forms{$_}} }, // from $source{$_}\n"
        if ( $forms{$_} ne "inconclusive" );
}

print "};\n"
