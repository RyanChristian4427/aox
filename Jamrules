# Decide what compiler and flags we're using.

OPTIM = ;
RANLIB = ;
C++FLAGS = -g -Werror ;
LINKFLAGS = -g ;

if $(ICC) {
    C++ = /opt/intel/compiler70/ia32/bin/icc ;
    LINK = /opt/intel/compiler70/ia32/bin/icc ;
}
else {
    C++ = g++ ;
    LINK = g++ ;
    C++FLAGS += -Wall -Werror ;

    if $(COV) {
        C++FLAGS += -fprofile-arcs -ftest-coverage ;
    }
}

# our lib directory contains additional include files
HDRS += [ FDirName $(TOP) lib ] ;

rule SubInclude
{
    if ! $($(<[1]))
    {
        Exit SubInclude $(<[1]) without prior SubDir $(<[1]) ;
    }

    SubDir $(<) ;

    local a b ;
    for a in $(IncludedDirectories) {
        if $(a) = $(SUBDIR) {
        b = true ;
        }
    }

    if ! $(b) {
        IncludedDirectories += $(SUBDIR) ;
        include $(JAMFILE:D=$(SUBDIR)) ;
    }
}

rule Build
{
    Objects $(>) ;
    set-$(<) += [ FGristFiles $(>:S=$(SUFOBJ)) ] ;
}

rule Program
{
    local target ;
    Depends exe : $(<) ;
    Depends $(<) : $(set-$(>)) ;
    MakeLocate $(<) : $(LOCATE_TARGET) ;

    Clean clean : $(<) ;
    Link $(<) : $(set-$(>)) ;
}
