JAMSETTINGS = Jamsettings ;
include $(JAMSETTINGS:D=$(TOP)) ;

# no user-serviceable parts below this line

VERSION = 0.90 ;

OPTIM = ;
RANLIB = ;

MkDir $(BINDIR) ;
MkDir $(MANDIR) ;
MkDir $(PIDFILEDIR) ;
MkDir $(JAILDIR) ;
MkDir $(CONFIGDIR) ;
MkDir $(LOGFILE:D) ;
Depends exe : $(PIDFILEDIR) $(JAILDIR) $(CONFIGDIR) $(LOGFILE:D) ;

if $(ICC) {
    C++ = icc ;
    BUILD = build/icc ;
}
else {
    C++ = g++ ;
    C++FLAGS += -Wall ;
    BUILD = build/gcc ;

    if $(COV) {
        C++FLAGS += -fprofile-arcs -ftest-coverage ;
        BUILD = build/gcov ;
    }
}

LINK = $(C++) ;

rule SubInclude
{
    if ! $($(<[1]))
    {
        Exit SubInclude $(<[1]) without prior SubDir $(<[1]) ;
    }

    local _tokens = $(SUBDIR_TOKENS) ;
    SubDir $(<) ;

    local a b ;
    for a in $(IncludedDirectories) {
        if $(a) = $(SUBDIR) {
            b = true ;
        }
    }

    if ! $(b) {
        IncludedDirectories += $(SUBDIR) ;
        include $(JAMFILE:D=$(SUBDIR)) ;
    }

    SubDir TOP $(_tokens) ;
}

rule Build
{
    LOCATE_TARGET = [ FDirName $(TOP) $(BUILD) $(SUBDIR_TOKENS) ] ;
    Objects $(>) ;
    set-$(<) += [ FGristFiles $(>:S=$(SUFOBJ)) ] ;
}

rule Program
{
    local target ;
    Depends exe : $(<) ;
    Depends $(<) : $(set-$(>)) ;
    MakeLocate $(<) : [ FDirName $(TOP) bin ] ;

    InstallBin $(BINDIR) : $(<) ;

    Clean clean : $(<) ;
    Link $(<) : $(set-$(>)) ;
}


rule Doc {
    Depends exe : <doc>.made.$(<) ;

    Clean clean : <doc>.made.$(<) ;
    Depends <doc>.made.$(<) : $(set-$(>):S=.cpp) ;
    Doc2 <doc>.made.$(<) : $(set-$(>):S=.cpp) ;
}

actions together Doc2 {
    bin/rdoc -o 'Oryx Mail Systems GmbH' -u 'http://www.oryx.com' -m doc/man/man3 -w doc/html $(>)
    touch $(<)
}
