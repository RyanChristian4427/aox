# declare directory, so we can build by running 'jam' in this directory
SubDir TOP imapd ;

# pull in the directories we need to build the programs named at the bottom:
# - lib

SubInclude TOP lib ;
SubInclude TOP codecs ;

# - our own subdirectories, with a -I pointing here
HDRS += [ FDirName $(TOP) imapd ] ;
HDRS += [ FDirName $(TOP) imapd db ] ;
SubInclude TOP imapd handlers ;
SubInclude TOP imapd sasl ;
SubInclude TOP imapd db ;

# declare our own directory again, for the benefit of the Build rules below

SubDir TOP imapd ;

# a rule to build the address-testing file, and maybe others later?

rule Struct
{
    Depends $(<) : $(>) ;
    Clean clean : $(<) ;
    SEARCH on $(>) = $(SEARCH_SOURCE) ;
    MakeLocate $(<) : $(LOCATE_SOURCE) ;
}

actions Struct
{
    sed -e 's/##.*//' -e 's/[\\"]/\\&/g' < $(>) | \
	grep . | \
	sed -e 's/^/{ "/' -e 's/	/", "/g' -e 's/$/" },/'> $(<)
}

# build the struct file for address testing

Struct addresses.inc : addresses.test ;
Struct datefields.inc : datefields.test ;

# build the .o files in this directory

Build imapdmain : imapd.cpp ;
Build imap : imap.cpp command.cpp cccp.cpp set.cpp mailbox.cpp
    squery.cpp smtp.cpp ;
Build message : address.cpp parser.cpp date.cpp header.cpp mimefields.cpp
    message.cpp ;
Build logdmain : logd.cpp ;
Build logd : logserver.cpp ;

Build database : cache.cpp query.cpp ;

Build server : connection.cpp listener.cpp loop.cpp endpoint.cpp log.cpp
    configuration.cpp table.cpp ;

Build runtestsmain : runtests.cpp ;

# the documentation groups. for the moment, the target is just a dummy

rule Doc {
    # Depends exe : $(<) ; # run this rule whenever "all executables" are built
    Doc2 $(<) : $(set-$(>):S=.cpp) ;
}

actions together Doc2 {
    qdoc -m ../doc/man/man3 -w ../doc/html $(>)
}

Doc doc : imap message logd database server lib ;

# the programs. these need to be last. magic. all Program calls need
# to be after all Build calls, since the Build puts object files into
# the sets used by Build.

Program imapd : imap message imapdmain database server lib ;
LINKLIBS on imapd = -lcrypt ;

Program logd : logd logdmain server lib ;
LINKLIBS on logd = ;

Program runtests : imap message logd database server lib runtestsmain ;
LINKLIBS on runtests = -lcrypt ;

